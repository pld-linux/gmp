Index: gmp-impl.h
===================================================================
RCS file: /home/cvsfiles/gmp/gmp-impl.h,v
retrieving revision 1.281.2.12
diff -u -r1.281.2.12 gmp-impl.h
--- gmp-impl.h	22 Apr 2004 23:59:53 -0000	1.281.2.12
+++ gmp-impl.h	29 Sep 2004 19:22:23 -0000
@@ -2188,14 +2188,24 @@
    there's an even number.  */
 
 #if defined (__GNUC__) && ! defined (NO_ASM) && HAVE_HOST_CPU_FAMILY_x86
+/* Some clever GCC maintainer decided to change the meaning of the q register
+   flag with GCC version 3.1.  He added a Q flag with the old meaning at the
+   same time.  This forces us to use a conditional on GCC version.  */
+#if __GMP_GNUC_PREREQ (3,1)
+#define __GMP_qm "=Qm"
+#define __GMP_q "=Q"
+#else
+#define __GMP_qm "=qm"
+#define __GMP_q "=q"
+#endif
 #define ULONG_PARITY(p, n)              \
   do {                                  \
     char           __p;                 \
     unsigned long  __n = (n);           \
     __n ^= (__n >> 16);                 \
-    asm ("xorb   %h1, %b1\n"            \
-         "setpo  %0\n"                  \
-         : "=qm" (__p), "=q" (__n)      \
+    asm ("xorb   %h1, %b1\n\t"          \
+         "setpo  %0"                    \
+         : __GMP_qm (__p), __GMP_q (__n)\
          : "1" (__n));                  \
     (p) = __p;                          \
   } while (0)
Index: gmp-impl.h
===================================================================
RCS file: /home/cvsfiles/gmp/gmp-impl.h,v
retrieving revision 1.281.2.13
diff -c -1 -r1.281.2.13 gmp-impl.h
*** gmp-impl.h	29 Sep 2004 20:04:54 -0000	1.281.2.13
--- gmp-impl.h	13 Jan 2005 01:08:01 -0000
***************
*** 1844,1846 ****
      int       __lb_base, __cnt;                                         \
!     mp_size_t __totbits;                                                \
                                                                          \
--- 1844,1846 ----
      int       __lb_base, __cnt;                                         \
!     size_t __totbits;                                                   \
                                                                          \
***************
*** 1857,1859 ****
          count_leading_zeros (__cnt, (ptr)[(size)-1]);                   \
!         __totbits = (size) * GMP_NUMB_BITS - (__cnt - GMP_NAIL_BITS);   \
                                                                          \
--- 1857,1859 ----
          count_leading_zeros (__cnt, (ptr)[(size)-1]);                   \
!         __totbits = (size_t) (size) * GMP_NUMB_BITS - (__cnt - GMP_NAIL_BITS);\
                                                                          \
Index: mpn/generic/rootrem.c
===================================================================
RCS file: /home/cvsfiles/gmp/mpn/generic/rootrem.c,v
retrieving revision 1.10
retrieving revision 1.11
diff -c -r1.10 -r1.11
*** mpn/generic/rootrem.c	12 Jan 2003 02:23:05 -0000	1.10
--- mpn/generic/rootrem.c	8 Apr 2005 09:30:42 -0000	1.11
***************
*** 94,100 ****
  
    xn = (xnb + GMP_NUMB_BITS - 1) / GMP_NUMB_BITS;
  
!   qp = TMP_ALLOC_LIMBS (un + 1);
    xp = TMP_ALLOC_LIMBS (xn + 1);
  
    /* Set initial root to only ones.  This is an overestimate of the actual root
--- 94,100 ----
  
    xn = (xnb + GMP_NUMB_BITS - 1) / GMP_NUMB_BITS;
  
!   qp = TMP_ALLOC_LIMBS (PP_ALLOC);
    xp = TMP_ALLOC_LIMBS (xn + 1);
  
    /* Set initial root to only ones.  This is an overestimate of the actual root
